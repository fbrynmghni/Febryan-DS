# Problem 1: Find the Square Root!

Create a function whose name is square_root that does the following:

Given a second order polynomial, find the roots (roots should be in real number). The input will be 3 numbers, each of them representing 'a', 'b', and 'c', in ax^2 + bx + c = 0.

Your task is to find the root of ax^2 + bx + c = 0.

However, notice that sometimes an equation cannot be solved, or they have only one solution instead of two. Your function should also take this into consideration.

The input of your function is 3 numbers, first number is the 'a' constant, second number is the 'b' constant, and third number is the 'c' constant.

Input: a = 1, b = -5, c = 6.

This means, the equation is 1x^2 - 5x + 6 = 0. This equation has two solutions, the first solution is x = 3, and the second solution is x = 2. So, your output should be:

Output: 'X1 = 3, X2 = 2'.

When we run the code square_root(1, -5, 6) the output will be: 'X1 = 3, X2 = 2'

Example 2:
Input: a = 2, b = 4, c = 2.

This means, the equation is 2x^2 + 4x + 2 = 0. This equation has only one solution, which is x = -1.

Output; 'X = -1'.

Example 3:
Input: a = 1, b = 1, c = 9.

This means, the equation is x^2 + x + 9 = 0. This equation has no real solution. (If you have learned about imaginary or complex numbers, the solution of this equation is those kind of numbers. But here, we're just going to deal with real numbers).

Output: 'No solution'.

# The Code

import math
def square_root(a,b,c) :
  det = (b**2)  - (4 * a * c)
  if det < 0:
    print("No Solution")
  else:
    x1 = (-b + math.sqrt(det))/(2 * a)
    x2 = (-b - math.sqrt(det))/(2 * a)
  print("x1 =", x1)
  print("x2 =", x2)
square_root(2,4,2)

Output:
x1 = -1.0
x2 = -1.0


# Problem 2: Find Distance Between Two Coordinates 

Create a function called distance that does the following:

Given two coordinates in a list. Your task is to calculate the distance between these two coordinates. The input of your function will be two list. Each list contains 2 members, 
representing the x and y position.

Example 1:
Input:

point_1 = [5, 5]

point_2 = [1, 2]

The distance is:

Square root of ((5-1)^2 + (5-2)^2) = Square root of (16 + 9) = Square root of (25) = 5.

Output: 'The distance is 5.'

So, when we run the code distance(point_1, point_2) the output will be 'The distance is 5'.
# The Code

def distance (point_1, point_2) :
  point_1 = [5,5]
  point_2 = [1,2]
  print('The Distance is', math.sqrt( ((point_1[0]-point_2[0])**2)+((point_1[1]-point_2[1])**2) ))
distance(point_1,point_2)

Output:
The Distance is 5.0
